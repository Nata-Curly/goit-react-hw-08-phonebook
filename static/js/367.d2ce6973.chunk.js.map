{"version":3,"file":"static/js/367.d2ce6973.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Notification.jsx","components/Form/Form.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AddContactForm = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 15px;`\n\nexport const Label = styled.label`\ntext-align: center;`\n\nexport const Btn = styled.button`\npadding: 5px 10px;\nwidth: 110px;\ncursor: pointer;\nfont-size: 16px;\nline-height: 1.2;\nfont-weight: 500;\nletter-spacing: -0.01em;\ncolor: black;\nbackground-color: #cbbfbf4d;\nborder: none;\nborder-radius: 10px;\nfilter: drop-shadow(0px 4px 4px #00000040);\ntransition-property: color, background-color;\ntransition-duration: 250ms;\ntransition-timing-function: cubic-bezier(.4, 0, .2, 1);\n&:hover,\n&:focus {\n    color: white;\n    background-color: blue;\n    }`\n\nexport const Input = styled.input`\nheight: 25px;\nwidth: 200px;\npadding: 0 10px;\nborder: 1px solid #cbbfbf4d;\nborder-radius: 10px;\nfilter: drop-shadow(0px 4px 4px #00000040);\ntransition-property: border;\ntransition-duration: 250ms;\ntransition-timing-function: cubic-bezier(.4, 0, .2, 1);\n&:hover,\n&:focus {\n    border: 1px solid blue;\n    }`","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts?.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    },\n);\n\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport const showInfoMessage = message => {\n  toast.info(message);\n};\n\nexport const showSuccessMessage = message => {\n  toast.success(message);\n};\n\nexport const showErrorMessage = message => {\n  toast.error(message);\n};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { AddContactForm, Label, Btn, Input } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { showErrorMessage, showSuccessMessage } from 'components/Notification';\nimport { addContact } from 'redux/contacts/operations';\n\nconst Form = () =>  {\n  const [name, stateName] = useState('');\n  const [number, stateNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const contactId = nanoid();\n  \n  const handlAdd = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name': stateName(value); break;\n      case 'number': stateNumber(value); break;\n      default: throw new Error('Unknown state');\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase().trim())) {\n            showErrorMessage(`The contact with name \"${name}\" is already in your numberbook`);\n            reset();\n            return;\n    };\n  \n    dispatch(addContact({name, number}));\n    showSuccessMessage(`The contact \"${name}\" is added to your numberbook`);\n    reset();\n  };\n  \n const reset = () => {\n   stateName('');\n   stateNumber('');\n \n  };\n    \n      return (\n        <AddContactForm onSubmit={handleSubmit}>\n          <Label htmlFor={contactId}>\n            Name <br />\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces\"\n              placeholder=\"enter contact's name\"\n              fullWidth\n              aria-describedby=\"contact's name\"\n              required value={name} onChange={handlAdd} id={contactId}\n            />\n          </Label>\n          <Label htmlFor=\"\">\n            Number <br />\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              title=\"number number can contain only numbers, spaces, dashes, parentheses and can start with +\"\n              placeholder=\"enter contact's phone number\"\n              fullWidth\n              aria-describedby=\"phone number\"\n              required value={number} onChange={handlAdd}\n            />\n          </Label>\n          <Btn type='submit'>Add contact</Btn>\n        </AddContactForm>\n      );\n  };\n \nexport default Form;\n\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 15px;\nfont-size: 18px;\n`\n\nexport const FilterInput = styled.input`\nheight: 25px;\nwidth: 200px;\npadding: 0 10px;\nborder: 1px solid #cbbfbf4d;\nborder-radius: 10px;\nfilter: drop-shadow(0px 4px 4px #00000040);\ntransition-property: border;\ntransition-duration: 250ms;\ntransition-timing-function: cubic-bezier(.4, 0, .2, 1);\n&:hover,\n&:focus {\n    border: 1px solid blue;\n    }`","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilter = ({ target }) => { dispatch(setFilter(target.value.toLowerCase().trim())); };\n\n    return ( \n        <FilterLabel>\n        Find contact by name <FilterInput type=\"text\" value={filter} onChange={handleFilter}/>\n        </FilterLabel>\n     );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    flex-direction: column;\n    width: 394px;\n    margin-left: auto;\n    margin-right: auto;\n    border: 1px solid #8080802b;\n    border-radius: 10px;\n    filter: drop-shadow(0px 4px 4px #00000040);\n    padding: 0 15px;\n    list-style: none;`\n\nexport const ListItem = styled.div`\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    justify-content: space-between;`\n\nexport const DeleteBtn = styled.button`\n    padding: 5px 10px;\n    width: 80px;\n    cursor: pointer;\n    font-size: 16px;\n    line-height: 1.2;\n    font-weight: 500\n    letter-spacing: -0.01em;\n    color: black;\n    background-color: #cbbfbf4d;\n    border: none;\n    border-radius: 10px;\n    filter: drop-shadow(0px 4px 4px #00000040);\n    transition-property: color, background-color;\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(.4, 0, .2, 1);\n    &:hover,\n    &:focus {\n    color: white;\n    background-color: red;\n    }\n`\n\n","import { showErrorMessage } from 'components/Notification';\nimport { List, DeleteBtn, ListItem } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { DeleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectVisibleContacts);\n\n    const onDeleteContact = (id) => {\n        dispatch(DeleteContact(id));\n        showErrorMessage(`You have deleted a contact`);\n    };\n    \n    return (\n    <List>\n            {contacts?.map(contact =>\n            (\n                <li key={contact.id}>\n                    <ListItem>\n                        <p>{contact.name}: {contact.number}</p>\n                        <DeleteBtn type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</DeleteBtn>\n                    </ListItem>\n                </li>\n            )\n            )}\n    </List>\n)}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })),\n    onDeleteContact: PropTypes.func,\n}\nexport default ContactList;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport { showInfoMessage } from 'components/Notification';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your Phonebook</title>\n      </Helmet>\n          <Form />\n          <h2>Contacts</h2>\n           <Filter />\n      {isLoading && !error && showInfoMessage(`Your request is in progress...`)}\n      <ContactList />\n    </HelmetProvider>\n  );\n};\n"],"names":["AddContactForm","styled","Label","Btn","Input","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","contact","toLowerCase","includes","showErrorMessage","message","toast","useState","stateName","number","stateNumber","dispatch","useDispatch","useSelector","contactId","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","handlAdd","evt","target","reset","onSubmit","preventDefault","trim","addContact","htmlFor","type","pattern","title","placeholder","fullWidth","required","onChange","FilterLabel","FilterInput","setFilter","List","ListItem","DeleteBtn","onClick","DeleteContact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}